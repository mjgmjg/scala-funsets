Your overall score for this assignment is 9.00 out of 10.00

The code you submitted did not pass all of our tests: your submission achieved a score of
7.00 out of 8.00 in our tests.

In order to find bugs in your code, we advise to perform the following steps:
 - Take a close look at the test output that you can find below: it should point you to
   the part of your code that has bugs.
 - Run the tests that we provide with the handout on your code.
 - The tests we provide do not test your code in depth: they are very incomplete. In order
   to test more aspects of your code, write your own unit tests.
 - Take another very careful look at the assignment description. Try to find out if you
   misunderstood parts of it. While reading through the assignment, write more tests.

Below you can find a short feedback for every individual test that failed.

Our automated style checker tool could not find any issues with your code. You obtained the maximal
style score of 2.00.

======== LOG OF FAILED TESTS ========

Your solution achieved a testing score of 210 out of 240.
Below you can see a short feedback for every test that failed, indicating the reason
for the test failure and how many points you lost for each individual test.

[Test Description] map: {1,3,4,5,7,1000}
[Observed Error] org.scalatest.exceptions.TestFailedException: "{[2,4,5,6,8]}" did not equal "{[0,2,3,4,6,999]}"
  [exception was thrown] detailed error message in debug output section below
[Lost Points] 10

[Test Description] forall & map: doubling numbers
[Observed Error] org.scalatest.exceptions.TestFailedException: The set obtained by doubling all numbers should contain only even numbers.
  [exception was thrown] detailed error message in debug output section below
[Lost Points] 10

[Test Description] exists should be implemented in terms of forall
[Observed Error] java.lang.AssertionError: assertion failed: expected forall to be called
  [exception was thrown] detailed error message in debug output section below
[Lost Points] 10

======== DEBUG OUTPUT OF TESTING TOOL ========

[test failure log] test name: map: {1,3,4,5,7,1000}
java.util.concurrent.ExecutionException: org.scalatest.exceptions.TestFailedException: "{[2,4,5,6,8]}" did not equal "{[0,2,3,4,6,999]}"
java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:262)
java.util.concurrent.FutureTask.get(FutureTask.java:119)
grading.GradingSuite$class.timeoutTask(GradingSuite.scala:44)
funsets.FunSetSuite.timeoutTask(FunSetSuite.scala:17)
grading.GradingSuite$class.runWithoutPrivileges(GradingSuite.scala:85)
funsets.FunSetSuite.runWithoutPrivileges(FunSetSuite.scala:17)
grading.GradingSuite$$anonfun$test$1.apply$mcV$sp(GradingSuite.scala:95)
grading.GradingSuite$$anonfun$test$1.apply(GradingSuite.scala:95)
grading.GradingSuite$$anonfun$test$1.apply(GradingSuite.scala:95)
org.scalatest.FunSuite$$anon$1.apply(FunSuite.scala:1265)
org.scalatest.Suite$class.withFixture(Suite.scala:1974)
funsets.FunSetSuite.withFixture(FunSetSuite.scala:17)
org.scalatest.FunSuite$class.invokeWithFixture$1(FunSuite.scala:1262)
org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)
org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)
org.scalatest.SuperEngine.runTestImpl(Engine.scala:198)
org.scalatest.FunSuite$class.runTest(FunSuite.scala:1271)
funsets.FunSetSuite.runTest(FunSetSuite.scala:17)
org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)
org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)
org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:260)
org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:249)
scala.collection.immutable.List.foreach(List.scala:318)
org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:249)
org.scalatest.SuperEngine.runTestsImpl(Engine.scala:326)


[test failure log] test name: forall & map: doubling numbers
java.util.concurrent.ExecutionException: org.scalatest.exceptions.TestFailedException: The set obtained by doubling all numbers should contain only even numbers.
java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:262)
java.util.concurrent.FutureTask.get(FutureTask.java:119)
grading.GradingSuite$class.timeoutTask(GradingSuite.scala:44)
funsets.FunSetSuite.timeoutTask(FunSetSuite.scala:17)
grading.GradingSuite$class.runWithoutPrivileges(GradingSuite.scala:85)
funsets.FunSetSuite.runWithoutPrivileges(FunSetSuite.scala:17)
grading.GradingSuite$$anonfun$test$1.apply$mcV$sp(GradingSuite.scala:95)
grading.GradingSuite$$anonfun$test$1.apply(GradingSuite.scala:95)
grading.GradingSuite$$anonfun$test$1.apply(GradingSuite.scala:95)
org.scalatest.FunSuite$$anon$1.apply(FunSuite.scala:1265)
org.scalatest.Suite$class.withFixture(Suite.scala:1974)
funsets.FunSetSuite.withFixture(FunSetSuite.scala:17)
org.scalatest.FunSuite$class.invokeWithFixture$1(FunSuite.scala:1262)
org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)
org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)
org.scalatest.SuperEngine.runTestImpl(Engine.scala:198)
org.scalatest.FunSuite$class.runTest(FunSuite.scala:1271)
funsets.FunSetSuite.runTest(FunSetSuite.scala:17)
org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)
org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)
org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:260)
org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:249)
scala.collection.immutable.List.foreach(List.scala:318)
org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:249)
org.scalatest.SuperEngine.runTestsImpl(Engine.scala:326)


[test failure log] test name: exists should be implemented in terms of forall
java.util.concurrent.ExecutionException: java.lang.AssertionError: assertion failed: expected forall to be called
java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:262)
java.util.concurrent.FutureTask.get(FutureTask.java:119)
grading.GradingSuite$class.timeoutTask(GradingSuite.scala:44)
funsets.FunSetSuite.timeoutTask(FunSetSuite.scala:17)
grading.GradingSuite$class.runWithoutPrivileges(GradingSuite.scala:85)
funsets.FunSetSuite.runWithoutPrivileges(FunSetSuite.scala:17)
grading.GradingSuite$$anonfun$test$1.apply$mcV$sp(GradingSuite.scala:95)
grading.GradingSuite$$anonfun$test$1.apply(GradingSuite.scala:95)
grading.GradingSuite$$anonfun$test$1.apply(GradingSuite.scala:95)
org.scalatest.FunSuite$$anon$1.apply(FunSuite.scala:1265)
org.scalatest.Suite$class.withFixture(Suite.scala:1974)
funsets.FunSetSuite.withFixture(FunSetSuite.scala:17)
org.scalatest.FunSuite$class.invokeWithFixture$1(FunSuite.scala:1262)
org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)
org.scalatest.FunSuite$$anonfun$runTest$1.apply(FunSuite.scala:1271)
org.scalatest.SuperEngine.runTestImpl(Engine.scala:198)
org.scalatest.FunSuite$class.runTest(FunSuite.scala:1271)
funsets.FunSetSuite.runTest(FunSetSuite.scala:17)
org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)
org.scalatest.FunSuite$$anonfun$runTests$1.apply(FunSuite.scala:1304)
org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:260)
org.scalatest.SuperEngine$$anonfun$org$scalatest$SuperEngine$$runTestsInBranch$1.apply(Engine.scala:249)
scala.collection.immutable.List.foreach(List.scala:318)
org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:249)
org.scalatest.SuperEngine.runTestsImpl(Engine.scala:326)